#!/usr/bin/env xcrun --sdk macosx swift

import Foundation
import Cocoa

var outputString = "// autogenerated by genswiftfonts.swift\n\nimport Foundation\nimport ExtraKit\n\n"

let regex = try! NSRegularExpression(pattern: "[-\\s]")

extension String {
	func swiftName() -> String {
		return regex.stringByReplacingMatches(in: self, range: NSMakeRange(0,characters.count), withTemplate: "")
	}
}

func generateFontEnum(_ path: String) {
	if let dataProvider = CGDataProvider(filename: UnsafePointer((path as NSString).utf8String!)) {
		let cgFont = CGFont(dataProvider)
		let font = CTFontCreateWithGraphicsFont(cgFont, 10, nil, nil) as NSFont
		let fontName = font.fontName
		let swiftName = fontName.swiftName()
		outputString += "\tcase \(swiftName)"
		if fontName != swiftName {
			outputString += " = \"\(fontName)\""
		}
		outputString += "\n"
	}
	
}


CommandLine.arguments[0..<CommandLine.arguments.count].forEach {
	print($0)
}
let outputPath = CommandLine.arguments[1]
let enumName = CommandLine.arguments[2]

outputString += "enum \(enumName): String, FontRepresentable {\n\n"

CommandLine.arguments[3..<CommandLine.arguments.count].forEach {
	generateFontEnum($0)
}

outputString += "}\n\n"

try! outputString.write(toFile:outputPath, atomically: true, encoding: String.Encoding.utf8)
